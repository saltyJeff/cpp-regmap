
regmap_test_compile_sz:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 e5 2f 00 00 	mov    0x2fe5(%rip),%rax        # 3ff0 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <memcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <memcpy@GLIBC_2.14>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <operator delete(void*, unsigned long)@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <operator delete(void*, unsigned long)@CXXABI_1.3.9>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1066:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001070 <main>:
    1070:	48 83 ec 08          	sub    $0x8,%rsp
    1074:	be 04 00 00 00       	mov    $0x4,%esi
    1079:	48 8d 3d 88 0f 00 00 	lea    0xf88(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    1080:	31 c0                	xor    %eax,%eax
    1082:	e8 a9 ff ff ff       	callq  1030 <printf@plt>
    1087:	31 c0                	xor    %eax,%eax
    1089:	48 83 c4 08          	add    $0x8,%rsp
    108d:	c3                   	retq   
    108e:	66 90                	xchg   %ax,%ax

0000000000001090 <_start>:
    1090:	31 ed                	xor    %ebp,%ebp
    1092:	49 89 d1             	mov    %rdx,%r9
    1095:	5e                   	pop    %rsi
    1096:	48 89 e2             	mov    %rsp,%rdx
    1099:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    109d:	50                   	push   %rax
    109e:	54                   	push   %rsp
    109f:	4c 8d 05 fa 01 00 00 	lea    0x1fa(%rip),%r8        # 12a0 <__libc_csu_fini>
    10a6:	48 8d 0d 93 01 00 00 	lea    0x193(%rip),%rcx        # 1240 <__libc_csu_init>
    10ad:	48 8d 3d bc ff ff ff 	lea    -0x44(%rip),%rdi        # 1070 <main>
    10b4:	ff 15 2e 2f 00 00    	callq  *0x2f2e(%rip)        # 3fe8 <__libc_start_main@GLIBC_2.2.5>
    10ba:	f4                   	hlt    
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <deregister_tm_clones>:
    10c0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4040 <__TMC_END__>
    10c7:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4040 <__TMC_END__>
    10ce:	48 39 f8             	cmp    %rdi,%rax
    10d1:	74 15                	je     10e8 <deregister_tm_clones+0x28>
    10d3:	48 8b 05 06 2f 00 00 	mov    0x2f06(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable>
    10da:	48 85 c0             	test   %rax,%rax
    10dd:	74 09                	je     10e8 <deregister_tm_clones+0x28>
    10df:	ff e0                	jmpq   *%rax
    10e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10e8:	c3                   	retq   
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <register_tm_clones>:
    10f0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4040 <__TMC_END__>
    10f7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4040 <__TMC_END__>
    10fe:	48 29 fe             	sub    %rdi,%rsi
    1101:	48 c1 fe 03          	sar    $0x3,%rsi
    1105:	48 89 f0             	mov    %rsi,%rax
    1108:	48 c1 e8 3f          	shr    $0x3f,%rax
    110c:	48 01 c6             	add    %rax,%rsi
    110f:	48 d1 fe             	sar    %rsi
    1112:	74 14                	je     1128 <register_tm_clones+0x38>
    1114:	48 8b 05 dd 2e 00 00 	mov    0x2edd(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable>
    111b:	48 85 c0             	test   %rax,%rax
    111e:	74 08                	je     1128 <register_tm_clones+0x38>
    1120:	ff e0                	jmpq   *%rax
    1122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1128:	c3                   	retq   
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <__do_global_dtors_aux>:
    1130:	80 3d 09 2f 00 00 00 	cmpb   $0x0,0x2f09(%rip)        # 4040 <__TMC_END__>
    1137:	75 2f                	jne    1168 <__do_global_dtors_aux+0x38>
    1139:	55                   	push   %rbp
    113a:	48 83 3d 96 2e 00 00 	cmpq   $0x0,0x2e96(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1141:	00 
    1142:	48 89 e5             	mov    %rsp,%rbp
    1145:	74 0c                	je     1153 <__do_global_dtors_aux+0x23>
    1147:	48 8b 3d ea 2e 00 00 	mov    0x2eea(%rip),%rdi        # 4038 <__dso_handle>
    114e:	e8 0d ff ff ff       	callq  1060 <__cxa_finalize@plt>
    1153:	e8 68 ff ff ff       	callq  10c0 <deregister_tm_clones>
    1158:	c6 05 e1 2e 00 00 01 	movb   $0x1,0x2ee1(%rip)        # 4040 <__TMC_END__>
    115f:	5d                   	pop    %rbp
    1160:	c3                   	retq   
    1161:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1168:	c3                   	retq   
    1169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001170 <frame_dummy>:
    1170:	e9 7b ff ff ff       	jmpq   10f0 <register_tm_clones>
    1175:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    117c:	00 00 00 
    117f:	90                   	nop

0000000000001180 <DummyBus::~DummyBus()>:
    1180:	c3                   	retq   
    1181:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1188:	00 00 00 
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <DummyBus::~DummyBus()>:
    1190:	be 20 00 00 00       	mov    $0x20,%esi
    1195:	e9 b6 fe ff ff       	jmpq   1050 <operator delete(void*, unsigned long)@plt>
    119a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000011a0 <DummyBus::write(unsigned int, unsigned short, unsigned char*, unsigned int)>:
    11a0:	53                   	push   %rbx
    11a1:	48 89 fb             	mov    %rdi,%rbx
    11a4:	0f b7 fa             	movzwl %dx,%edi
    11a7:	66 83 fa 03          	cmp    $0x3,%dx
    11ab:	76 33                	jbe    11e0 <DummyBus::write(unsigned int, unsigned short, unsigned char*, unsigned int)+0x40>
    11ad:	83 ea 10             	sub    $0x10,%edx
    11b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    11b5:	66 83 fa 07          	cmp    $0x7,%dx
    11b9:	77 1b                	ja     11d6 <DummyBus::write(unsigned int, unsigned short, unsigned char*, unsigned int)+0x36>
    11bb:	48 8d 7c 3b 04       	lea    0x4(%rbx,%rdi,1),%rdi
    11c0:	48 85 ff             	test   %rdi,%rdi
    11c3:	74 11                	je     11d6 <DummyBus::write(unsigned int, unsigned short, unsigned char*, unsigned int)+0x36>
    11c5:	48 89 ce             	mov    %rcx,%rsi
    11c8:	44 89 c2             	mov    %r8d,%edx
    11cb:	e8 70 fe ff ff       	callq  1040 <memcpy@plt>
    11d0:	83 43 0c 01          	addl   $0x1,0xc(%rbx)
    11d4:	31 c0                	xor    %eax,%eax
    11d6:	5b                   	pop    %rbx
    11d7:	c3                   	retq   
    11d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    11df:	00 
    11e0:	48 8d 7c 3b 10       	lea    0x10(%rbx,%rdi,1),%rdi
    11e5:	eb de                	jmp    11c5 <DummyBus::write(unsigned int, unsigned short, unsigned char*, unsigned int)+0x25>
    11e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    11ee:	00 00 

00000000000011f0 <DummyBus::read(unsigned int, unsigned short, unsigned char*, unsigned int)>:
    11f0:	53                   	push   %rbx
    11f1:	0f b7 f2             	movzwl %dx,%esi
    11f4:	48 89 fb             	mov    %rdi,%rbx
    11f7:	66 83 fa 03          	cmp    $0x3,%dx
    11fb:	76 33                	jbe    1230 <DummyBus::read(unsigned int, unsigned short, unsigned char*, unsigned int)+0x40>
    11fd:	83 ea 10             	sub    $0x10,%edx
    1200:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1205:	66 83 fa 07          	cmp    $0x7,%dx
    1209:	77 1b                	ja     1226 <DummyBus::read(unsigned int, unsigned short, unsigned char*, unsigned int)+0x36>
    120b:	48 8d 74 37 04       	lea    0x4(%rdi,%rsi,1),%rsi
    1210:	48 85 f6             	test   %rsi,%rsi
    1213:	74 11                	je     1226 <DummyBus::read(unsigned int, unsigned short, unsigned char*, unsigned int)+0x36>
    1215:	48 89 cf             	mov    %rcx,%rdi
    1218:	44 89 c2             	mov    %r8d,%edx
    121b:	e8 20 fe ff ff       	callq  1040 <memcpy@plt>
    1220:	83 43 08 01          	addl   $0x1,0x8(%rbx)
    1224:	31 c0                	xor    %eax,%eax
    1226:	5b                   	pop    %rbx
    1227:	c3                   	retq   
    1228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    122f:	00 
    1230:	48 8d 74 37 10       	lea    0x10(%rdi,%rsi,1),%rsi
    1235:	eb de                	jmp    1215 <DummyBus::read(unsigned int, unsigned short, unsigned char*, unsigned int)+0x25>
    1237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    123e:	00 00 

0000000000001240 <__libc_csu_init>:
    1240:	41 57                	push   %r15
    1242:	49 89 d7             	mov    %rdx,%r15
    1245:	41 56                	push   %r14
    1247:	49 89 f6             	mov    %rsi,%r14
    124a:	41 55                	push   %r13
    124c:	41 89 fd             	mov    %edi,%r13d
    124f:	41 54                	push   %r12
    1251:	4c 8d 25 60 2b 00 00 	lea    0x2b60(%rip),%r12        # 3db8 <__frame_dummy_init_array_entry>
    1258:	55                   	push   %rbp
    1259:	48 8d 2d 60 2b 00 00 	lea    0x2b60(%rip),%rbp        # 3dc0 <__init_array_end>
    1260:	53                   	push   %rbx
    1261:	4c 29 e5             	sub    %r12,%rbp
    1264:	48 83 ec 08          	sub    $0x8,%rsp
    1268:	e8 93 fd ff ff       	callq  1000 <_init>
    126d:	48 c1 fd 03          	sar    $0x3,%rbp
    1271:	74 1b                	je     128e <__libc_csu_init+0x4e>
    1273:	31 db                	xor    %ebx,%ebx
    1275:	0f 1f 00             	nopl   (%rax)
    1278:	4c 89 fa             	mov    %r15,%rdx
    127b:	4c 89 f6             	mov    %r14,%rsi
    127e:	44 89 ef             	mov    %r13d,%edi
    1281:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1285:	48 83 c3 01          	add    $0x1,%rbx
    1289:	48 39 dd             	cmp    %rbx,%rbp
    128c:	75 ea                	jne    1278 <__libc_csu_init+0x38>
    128e:	48 83 c4 08          	add    $0x8,%rsp
    1292:	5b                   	pop    %rbx
    1293:	5d                   	pop    %rbp
    1294:	41 5c                	pop    %r12
    1296:	41 5d                	pop    %r13
    1298:	41 5e                	pop    %r14
    129a:	41 5f                	pop    %r15
    129c:	c3                   	retq   
    129d:	0f 1f 00             	nopl   (%rax)

00000000000012a0 <__libc_csu_fini>:
    12a0:	c3                   	retq   

Disassembly of section .fini:

00000000000012a4 <_fini>:
    12a4:	48 83 ec 08          	sub    $0x8,%rsp
    12a8:	48 83 c4 08          	add    $0x8,%rsp
    12ac:	c3                   	retq   
